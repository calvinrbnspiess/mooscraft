package de.on19.mooscraft.game;import de.on19.mooscraft.game.characters.Character;import de.on19.mooscraft.game.characters.*;import de.on19.mooscraft.game.interaction.ActionHandler;import de.on19.mooscraft.game.interaction.actions.GameAction;import de.on19.mooscraft.game.screens.ChooseScreen;import de.on19.mooscraft.game.screens.SplashScreen;import de.on19.mooscraft.game.worlds.World;import de.on19.mooscraft.game.worlds.world1.World1;import de.on19.mooscraft.renderer.Renderer;import de.on19.mooscraft.utils.StringTools;import java.util.List;public class Game {    //contains game logik    private Renderer renderer;    private ActionHandler handler;    private Character character;    private List<World> worlds;    public Game(Renderer renderer, ActionHandler handler) {        this.renderer = renderer;        this.handler = handler;        this.character = null;        this.worlds = List.of(new World1(), new World1());    }    public int getSpotsAmount() {        int i = 0;        for(World w : this.worlds) {            i += w.getPathLength();        }        return i;    }    public String getProgressIndicator(Character character) {        String indicator = "";        int visitedSpots = character.getVisitedSpots();        int iterationIndex = 0;        for(World w : this.worlds) {            indicator = indicator + "[";            for(int i = 0 ; i < w.getPathLength(); i++) {                iterationIndex++;                indicator += visitedSpots >= iterationIndex ? "#" : "_";            }            indicator = indicator + "]";        }        int spots = this.getSpotsAmount();        // java can't do integer division -> always zero        float percentage = (float) visitedSpots / (float) spots * 100;        indicator = indicator + " " + Math.round(percentage) + "%";        return indicator;    }    //sequential processing of the following lines    public void run() throws InterruptedException, UnsupportedOperationException {        renderer.printScreen(new SplashScreen(handler));            //shows start screen        handler.waitForAction(new GameAction() {            @Override            public boolean isInvoked(String[] args) {                return args[0].equals("weiter");            }        });            /**waits for any interaction by typing "weiter" into keyboard            if no action or other actions follows --> see method onCommand             */        ChooseScreen chooseCharacter = new ChooseScreen();        chooseCharacter.append(new String[]{"Um die Welt zu durchqueren und die Burg " +                "zu erobern kannst du zwischen verschiedenen Kreaturen von Mooscraft wählen.\nWähle deine " +                "Eigenschaften gut aus, denn der Weg zur Burg kann tückisch sein.\n\n"});        chooseCharacter.append(new String[]{                "Ich bin Hexe Magalia.\n" +                "Ich helfe dir durch das Spiel mit meinen dunklen, bösen Zaubertränken.\n" +                        "Mein Ziel ist es die Macht mit Hilfe der Magie an mich zu reißen.\n" +                        "Ich will alles beherrschen und durch meine Dämonenbeschwörungen allem Sterblichem " +                        "ein Ende setzen.\n”" + "Ego fuo dius imperium Turrismaga!!!”\n\n" +                        "Wählst du mich als Spielcharakter, so erhälst du die größte Willenskraft [50] um " +                        "ans " +                        "Ziel zu kommen. \n" + "Ich habe sehr viel Lebenserfahrung, weiß also über alle " +                        "Gefahren des Weges Bescheid.\n" + "Jedoch bin ich dementsprechend alt und habe nicht" +                        " mehr so viel Lebensenergie [25] und Stärke [20].\n" + "Dafür sind meine Zauberkraft " +                        "[40] und Weisheit [30] umso stärker.\n\n"});        chooseCharacter.append(new String[]{                "Ich bin Kriegerin Bellatrix.\nMeine Aufgabe ist es im Land meines Vaters, dem Herrscher von" +                        "Arcis Borbetomagus,\ndie Burg in Worms vor unerwünschten Eindringlingen zu bewahren.\n" +                        "Ich komme in Frieden, aber besitze genügend Stärke [50] und Willenskraft [40] um unser Land zu " +                        "verteidigen" +                        ".\n" +                        "Als Tochter des Herrschers bin ich jung und voller Lebensenergie [80].\n" +                        "Jedoch mangelt es mit an Zauberkraft [10] und Weisheit [10].\n\n"        });        chooseCharacter.append(new String[]{                "Ich bin der Weiße Magier Kelii.\nIch bin der älteste Charakter in Mooscraft; jedoch nur " +                        "äußerlich.\nAuf den ersten Blick mag mein sehr langer weißer Bart aussehen als wäre " +                        "ich gealtert.\nJedoch habe ich Mittels meiner Weisheit [50] einen Zaubertrank " +                        "entwickelt,\nwelcher mich stets auf dem Stand eines 25 Jahre jungen Burschen hält.\n" +                        "Meine Lebensenergie [80] reicht aus um den Weg mit etwas Geschick zu meistern.\n" +                        "Als Urgestein der Magie habe ich natürlich auch stets einen Zauberspruch zur " +                        "Verteidigung auf den Lippen Zauberkraft [35].\nLeider hat der Jungtrunk auf Dauer" +                        "eine kleine Nebenwirkung.\nEr wirkt sich auf meine Willenskraft [20] aus" +                        "worauf hin ich kurzzeitig zum Komiker mutiere.Willenskraft [20].\n\n"        });        chooseCharacter.append(new String[]{                "Ich bin Schurke Badito.\n" +                        "Meine Hinterhalte sind deine Fallen.\nMit schlauen Tricks verzerre " +                        "ich deine Sinneswahrnehmung und nichts ist mehr so wie es scheint (Willenskraft [30]).\n" +                        "Ich bin klug und fix (Lebensenergie [70]).\nIch kann mich schnell auf Land " +                        "fortbewegen und kenne die besten Verstecke.\n" +                        "Wählst du mich, bist du cleverer als die Anderen und durchblickst jede Situation mit einem kühlen Kopf.\n" +                        "Vor Wasser bin ich allerdings scheu und durch meine Cleverness mussten meine Muskeln" +                        "leiden.\nDadurch ist meine Stärke [30] nicht ausreichend für einen Kampf auf " +                        "Augenhöhe.\nAußerdem bin ich wenig bewandert in den Feldern der " +                        "Zauberkraft und des Wissens,\nwodurch ich nur wenig Zauberkraft [10] und " +                        "Wiesheit [10] bieten kann.\n\n"        });        chooseCharacter.append(new String[]{                "Ich bin Meerjungfraumann Marin.\nIm Wasser bin ich unschlagbar. Dort ist meine Heimat und " +                        "diese beschütze ich mit den mir gegebenen Fähigkeiten (Willenskraft [40]).\n" +                        "Geboren bin ich im Fluss Mittelklinge, welchen ich kenne wie meine Westentasche,\n" +                        "da ich nun schon ein Weilchen auf dieser Welt wandle (Lebensenergie [50]).\n" +                        "Wählst du mich, sind deine Chancen auf Land geringer, dafür im Wasser umso höher.\n" +                        "Auch an Stärke [40] habe ich über die Jahre zugelegt und bekämpfe in der " +                        "Nähe von Wasser jeden Gegner.\nMit Zauberkraft [10]oder tiefer  Weisheit [30] kann " +                        "ich dagegen nicht auftrumphen.\n\n"        });        chooseCharacter.append(new String[]{StringTools.centerInRow("≈≈≈ Wähle deinen Charakter ≈≈≈", 112)});        chooseCharacter.addOptions(new String[]{                "Magalia (Hexe)",                "Bellatrix (Kriegerin)",                "Weißer Magier",                "Schurke",                "Meerjungfraumann"        });        chooseCharacter.setInstruction("Triff eine weise Entscheidung, indem du eine der Optionen eingibst.");        renderer.printScreen(chooseCharacter, true);        handler.waitForAction(new GameAction() {            @Override            public void onCommand(String[] args, ActionHandler handler) {                // TODO user enters "." or only a part of option that is contained in every option                // TODO should merge args to single string?                if (StringTools.contains(chooseCharacter.getFormattedOptions()[0], args[0])) {                    character = new Witch();                } else if (StringTools.contains(chooseCharacter.getFormattedOptions()[1], args[0])) {                    character = new Warrior();                } else if (StringTools.contains(chooseCharacter.getFormattedOptions()[2], args[0])) {                    character = new WhiteMage();                } else if (StringTools.contains(chooseCharacter.getFormattedOptions()[3], args[0])) {                    character = new Rogue();                } else if (StringTools.contains(chooseCharacter.getFormattedOptions()[4], args[0])) {                    character = new MermaidMan();                }            }            /** getformattedoption: provides list with all options to choose             * tolowerCase: changes strings provides with string to be compared in lowercase to make them             * comparable independently of upper/lowercase             * character gets chosen by typing in A-E, the full name or any part of the name            *if wrong combinations is typed in --> no reaction; action handler waits. This gets tested via next lines             * isInvoked not neccessary here (isInvoked->true is already defined in GameAction)             */        });        for(World w : this.worlds) {            w.onEnter(this, character);        }        // einzelne welten aufrufen -> onEnter -> danach burg    }    public Renderer getRenderer() {        return this.renderer;    }    public ActionHandler getHandler() {        return this.handler;    }}